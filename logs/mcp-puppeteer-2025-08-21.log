{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-21 05:02:05.794"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-21 05:02:05.795"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-21 12:23:35.960"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-21 12:23:35.961"}
{"arguments":{"debugPort":9222},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:38:49.857","tool":"puppeteer_connect_active_tab"}
{"0":"n","1":"p","2":"x","level":"info","message":"Launching browser with config:","service":"mcp-puppeteer","timestamp":"2025-08-21 12:38:49.857"}
{"level":"info","message":"Browser launched successfully","service":"mcp-puppeteer","timestamp":"2025-08-21 12:38:50.458"}
{"level":"info","message":"Connecting to existing browser","service":"mcp-puppeteer","timestamp":"2025-08-21 12:38:50.471","wsEndpoint":"ws://localhost:9222/devtools/browser/bbd04ae2-42a3-4123-8260-d3c3f4e1f420"}
{"level":"debug","message":"Establishing connection to browser","service":"mcp-puppeteer","timestamp":"2025-08-21 12:38:50.471"}
{"level":"info","message":"Successfully connected to browser","service":"mcp-puppeteer","timestamp":"2025-08-21 12:38:50.475"}
{"arguments":{"debugPort":9222},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:39:08.813","tool":"puppeteer_connect_active_tab"}
{"level":"info","message":"Connecting to existing browser","service":"mcp-puppeteer","timestamp":"2025-08-21 12:39:08.815","wsEndpoint":"ws://localhost:9222/devtools/browser/bbd04ae2-42a3-4123-8260-d3c3f4e1f420"}
{"level":"debug","message":"Establishing connection to browser","service":"mcp-puppeteer","timestamp":"2025-08-21 12:39:08.815"}
{"level":"info","message":"Successfully connected to browser","service":"mcp-puppeteer","timestamp":"2025-08-21 12:39:08.819"}
{"level":"info","message":"Found active webpage:","service":"mcp-puppeteer","timestamp":"2025-08-21 12:39:08.824","title":"Bitcoin Tools | Simple Blockchain Tools for Everyone","url":"http://localhost:3001/bitcoin-tools/"}
{"arguments":{"height":900,"name":"bitcoin-tools-initial","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:39:17.143","tool":"puppeteer_screenshot"}
{"arguments":{"selector":"span.cursor-help.text-bitcoin"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:40:01.631","tool":"puppeteer_hover"}
{"arguments":{"height":900,"name":"tooltip-hover-transactions","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:40:10.169","tool":"puppeteer_screenshot"}
{"arguments":{"selector":"button[value=\"fees\"]"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:40:18.361","tool":"puppeteer_click"}
{"arguments":{"script":"// Find and click the Fee Calculator tab\nconst tabs = document.querySelectorAll('[role=\"tab\"]');\nlet feeTab = null;\ntabs.forEach(tab => {\n  if (tab.textContent.includes('Fee Calculator')) {\n    feeTab = tab;\n  }\n});\nif (feeTab) {\n  feeTab.click();\n  'Clicked Fee Calculator tab';\n} else {\n  'Fee Calculator tab not found';\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:40:27.375","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":324,"service":"mcp-puppeteer","timestamp":"2025-08-21 12:40:27.376"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 12:40:27.377"}
{"arguments":{"script":"window.location.reload();"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:43:02.906","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":25,"service":"mcp-puppeteer","timestamp":"2025-08-21 12:43:02.906"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 12:43:02.907"}
{"arguments":{"selector":"span.cursor-help.text-bitcoin"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:43:20.259","tool":"puppeteer_hover"}
{"arguments":{"height":900,"name":"tooltip-after-portal-fix","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:43:30.069","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Click on Fee Calculator tab\nconst tabs = document.querySelectorAll('[role=\"tab\"]');\nlet feeTab = null;\ntabs.forEach(tab => {\n  if (tab.textContent.includes('Fee Calculator')) {\n    feeTab = tab;\n  }\n});\nif (feeTab) {\n  feeTab.click();\n  'Clicked Fee Calculator tab';\n} else {\n  'Fee Calculator tab not found';\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:43:43.254","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":314,"service":"mcp-puppeteer","timestamp":"2025-08-21 12:43:43.254"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 12:43:43.255"}
{"arguments":{"script":"// Wait a moment and find the Fee Calculator tab\nsetTimeout(() => {\n  const buttons = document.querySelectorAll('button');\n  buttons.forEach(button => {\n    if (button.textContent.includes('Fee Calculator')) {\n      button.click();\n    }\n  });\n}, 500);\n'Attempting to click Fee Calculator'"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:43:51.679","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":289,"service":"mcp-puppeteer","timestamp":"2025-08-21 12:43:51.679"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 12:43:51.680"}
{"arguments":{"height":900,"name":"fee-calculator-tab","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:44:09.873","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Find and click the Fee Calculator tab more precisely\nconst tabButtons = Array.from(document.querySelectorAll('button[role=\"tab\"]'));\nconst feeTab = tabButtons.find(btn => btn.textContent.includes('Fee Calculator'));\nif (feeTab) {\n  feeTab.click();\n  return 'Clicked Fee Calculator tab';\n} else {\n  return 'Tab not found. Available tabs: ' + tabButtons.map(btn => btn.textContent).join(', ');\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:44:22.682","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":396,"service":"mcp-puppeteer","timestamp":"2025-08-21 12:44:22.682"}
{"hasResult":true,"level":"debug","logCount":0,"message":"Script execution result","resultType":"string","service":"mcp-puppeteer","timestamp":"2025-08-21 12:44:22.683"}
{"arguments":{"selector":"span.cursor-help.text-bitcoin"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:44:42.651","tool":"puppeteer_hover"}
{"arguments":{"height":900,"name":"fee-calculator-tooltip-fixed","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:44:52.894","tool":"puppeteer_screenshot"}
{"arguments":{"url":"http://localhost:3001/calculator"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:45:18.018","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-21 12:45:18.018","url":"http://localhost:3001/calculator"}
{"error":"net::ERR_ABORTED at http://localhost:3001/calculator","level":"error","message":"Navigation failed","service":"mcp-puppeteer","timestamp":"2025-08-21 12:45:37.632","url":"http://localhost:3001/calculator"}
{"arguments":{"script":"window.location.href = 'http://localhost:3001/calculator';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:45:53.928","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":58,"service":"mcp-puppeteer","timestamp":"2025-08-21 12:45:53.928"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 12:45:55.517"}
{"arguments":{"height":900,"name":"calculator-page-check","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:46:20.455","tool":"puppeteer_screenshot"}
{"arguments":{"selector":"a:contains(\"Reload Page\")"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:46:29.353","tool":"puppeteer_click"}
{"arguments":{"script":"// Find and click the Reload Page link\nconst links = document.querySelectorAll('a');\nlet reloadLink = null;\nlinks.forEach(link => {\n  if (link.textContent.includes('Reload Page')) {\n    reloadLink = link;\n  }\n});\nif (reloadLink) {\n  reloadLink.click();\n  'Clicked Reload Page';\n} else {\n  'Reload Page link not found';\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:46:38.025","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":320,"service":"mcp-puppeteer","timestamp":"2025-08-21 12:46:38.025"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 12:46:38.026"}
{"arguments":{"script":"window.location.href = 'http://localhost:3001/';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:47:00.323","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":48,"service":"mcp-puppeteer","timestamp":"2025-08-21 12:47:00.323"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 12:47:00.324"}
{"arguments":{"script":"window.location.href = 'http://localhost:3001/bitcoin-tools';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 12:47:22.422","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":61,"service":"mcp-puppeteer","timestamp":"2025-08-21 12:47:22.422"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 12:47:22.423"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-21 13:49:35.171"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-21 13:49:35.172"}
{"level":"info","message":"Puppeteer MCP Server closing","service":"mcp-puppeteer","timestamp":"2025-08-21 13:55:30.942"}
{"arguments":{"debugPort":9222},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:56:39.313","tool":"puppeteer_connect_active_tab"}
{"0":"n","1":"p","2":"x","level":"info","message":"Launching browser with config:","service":"mcp-puppeteer","timestamp":"2025-08-21 13:56:39.314"}
{"level":"info","message":"Browser launched successfully","service":"mcp-puppeteer","timestamp":"2025-08-21 13:56:39.707"}
{"level":"info","message":"Connecting to existing browser","service":"mcp-puppeteer","timestamp":"2025-08-21 13:56:39.720","wsEndpoint":"ws://localhost:9222/devtools/browser/8b6d1464-46b3-4389-9942-8322af1e06ab"}
{"level":"debug","message":"Establishing connection to browser","service":"mcp-puppeteer","timestamp":"2025-08-21 13:56:39.720"}
{"level":"info","message":"Successfully connected to browser","service":"mcp-puppeteer","timestamp":"2025-08-21 13:56:39.724"}
{"level":"info","message":"Found active webpage:","service":"mcp-puppeteer","timestamp":"2025-08-21 13:56:39.728","title":"New Tab","url":"chrome://new-tab-page/"}
{"arguments":{"url":"http://localhost:3000/bitcoin-tools"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:56:43.406","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-21 13:56:43.406","url":"http://localhost:3000/bitcoin-tools"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-21 13:56:45.957","url":"http://localhost:3000/bitcoin-tools"}
{"arguments":{"height":800,"name":"bitcoin-tools-initial","width":1200},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:56:52.216","tool":"puppeteer_screenshot"}
{"arguments":{"selector":"button:has-text(\"Network Status\")"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:56:57.230","tool":"puppeteer_click"}
{"arguments":{"script":"// Find and click the Network Status tab\nconst tabs = document.querySelectorAll('[role=\"tab\"]');\nlet networkTab = null;\ntabs.forEach(tab => {\n  if (tab.textContent.includes('Network Status')) {\n    networkTab = tab;\n  }\n});\nif (networkTab) {\n  networkTab.click();\n  'Clicked Network Status tab';\n} else {\n  'Network Status tab not found';\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:04.093","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":340,"service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:04.093"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:04.094"}
{"arguments":{"script":"// Click on the Network Status tab\nconst buttons = Array.from(document.querySelectorAll('button'));\nconst networkButton = buttons.find(btn => btn.textContent.includes('Network Status'));\nif (networkButton) {\n  networkButton.click();\n  'Successfully clicked Network Status tab';\n} else {\n  'Network Status button not found';\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:10.793","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":325,"service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:10.794"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:10.794"}
{"arguments":{"script":"// Get all tab trigger elements\nconst tabTriggers = document.querySelectorAll('[data-state]');\nlet found = false;\ntabTriggers.forEach(trigger => {\n  if (trigger.textContent.includes('Network Status')) {\n    trigger.click();\n    found = true;\n  }\n});\nfound ? 'Clicked Network Status' : 'Tab not found';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:17.298","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":301,"service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:17.298"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:17.299"}
{"arguments":{"height":800,"name":"bitcoin-tools-current-state","width":1200},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:22.420","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Click the Network Status tab - find it by the exact structure\nconst networkTab = Array.from(document.querySelectorAll('button')).find(btn => {\n  const spans = btn.querySelectorAll('span');\n  for (let span of spans) {\n    if (span.textContent === 'Network Status') {\n      return true;\n    }\n  }\n  return false;\n});\n\nif (networkTab) {\n  networkTab.click();\n  'Clicked Network Status tab';\n} else {\n  // Try alternative approach\n  const allButtons = document.querySelectorAll('button');\n  const texts = [];\n  allButtons.forEach(btn => texts.push(btn.innerText));\n  'Available buttons: ' + texts.join(', ');\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:31.751","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":609,"service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:31.751"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:31.752"}
{"arguments":{"script":"// Look for the tab with value=\"network\" or containing Network Status text\nconst tabs = document.querySelectorAll('[role=\"tab\"], button[value=\"network\"]');\nlet clicked = false;\ntabs.forEach(tab => {\n  if (tab.getAttribute('value') === 'network' || tab.textContent.includes('Network Status')) {\n    tab.click();\n    clicked = true;\n  }\n});\n\nif (!clicked) {\n  // Try clicking the third tab (Network Status is third in the list)\n  const allTabs = document.querySelectorAll('button[data-state]');\n  if (allTabs[2]) {\n    allTabs[2].click();\n    'Clicked third tab (should be Network Status)';\n  } else {\n    'Could not find Network Status tab';\n  }\n} else {\n  'Successfully clicked Network Status tab';\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:43.073","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":700,"service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:43.073"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:43.074"}
{"arguments":{"height":800,"name":"network-status-tab","width":1200},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:47.843","tool":"puppeteer_screenshot"}
{"arguments":{"selector":".grid button:nth-child(3)"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:57:54.277","tool":"puppeteer_click"}
{"arguments":{"height":800,"name":"network-status-loaded","width":1200},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 13:58:00.069","tool":"puppeteer_screenshot"}
{"arguments":{"url":"http://localhost:3000/bitcoin-tools"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 14:01:03.135","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-21 14:01:03.135","url":"http://localhost:3000/bitcoin-tools"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-21 14:01:03.957","url":"http://localhost:3000/bitcoin-tools"}
{"arguments":{"selector":".grid button:nth-child(3)"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 14:01:13.092","tool":"puppeteer_click"}
{"arguments":{"height":800,"name":"network-status-after-fixes","width":1200},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 14:01:21.748","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Monitor for layout shifts and flickering\nlet layoutShifts = [];\nlet observerActive = true;\n\n// Create a PerformanceObserver to track layout shifts\nif (window.PerformanceObserver) {\n  const observer = new PerformanceObserver((list) => {\n    for (const entry of list.getEntries()) {\n      if (entry.entryType === 'layout-shift' && !entry.hadRecentInput) {\n        layoutShifts.push({\n          value: entry.value,\n          time: entry.startTime\n        });\n      }\n    }\n  });\n  \n  observer.observe({ type: 'layout-shift', buffered: true });\n  \n  // Stop observing after 5 seconds\n  setTimeout(() => {\n    observer.disconnect();\n    observerActive = false;\n    console.log('Layout shifts detected:', layoutShifts);\n    console.log('Total CLS:', layoutShifts.reduce((sum, shift) => sum + shift.value, 0));\n  }, 5000);\n}\n\n// Also check for element position changes\nconst checkElements = () => {\n  const cards = document.querySelectorAll('.rounded-xl');\n  const positions = [];\n  cards.forEach((card, index) => {\n    const rect = card.getBoundingClientRect();\n    positions.push({\n      index,\n      top: rect.top,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    });\n  });\n  return positions;\n};\n\nlet initialPositions = checkElements();\nlet changeCount = 0;\n\nconst interval = setInterval(() => {\n  if (!observerActive) {\n    clearInterval(interval);\n    return;\n  }\n  \n  const currentPositions = checkElements();\n  for (let i = 0; i < currentPositions.length; i++) {\n    if (initialPositions[i] && (\n      Math.abs(currentPositions[i].top - initialPositions[i].top) > 2 ||\n      Math.abs(currentPositions[i].left - initialPositions[i].left) > 2\n    )) {\n      changeCount++;\n      console.log(`Position change detected for element ${i}`);\n    }\n  }\n  initialPositions = currentPositions;\n}, 100);\n\n'Monitoring for layout shifts and flickering for 5 seconds...';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 14:04:07.187","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":1890,"service":"mcp-puppeteer","timestamp":"2025-08-21 14:04:07.187"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 14:04:07.188"}
{"arguments":{"script":"// Get the console logs to see monitoring results\nconst logs = [];\nconst originalLog = console.log;\nconsole.log = function(...args) {\n  logs.push(args.join(' '));\n  originalLog.apply(console, args);\n};\n\n// Check if we have results from the monitoring\nsetTimeout(() => {\n  console.log('Monitoring complete. Checking results...');\n  if (logs.length > 0) {\n    logs.join('\\n');\n  } else {\n    'No layout shifts detected in the monitoring period';\n  }\n}, 1000);\n\nlogs.length > 0 ? logs.join('\\n') : 'Waiting for monitoring results...';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 14:04:32.006","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":531,"service":"mcp-puppeteer","timestamp":"2025-08-21 14:04:32.007"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-21 14:04:32.007"}
{"arguments":{"url":"http://localhost:3000/bitcoin-tools"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 14:04:42.492","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-21 14:04:42.492","url":"http://localhost:3000/bitcoin-tools"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-21 14:04:43.416","url":"http://localhost:3000/bitcoin-tools"}
{"arguments":{"selector":".grid button:nth-child(3)"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 14:04:52.642","tool":"puppeteer_click"}
{"arguments":{"url":"http://localhost:3000/bitcoin-tools"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 14:07:05.171","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-21 14:07:05.171","url":"http://localhost:3000/bitcoin-tools"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-21 14:07:06.132","url":"http://localhost:3000/bitcoin-tools"}
{"arguments":{"selector":".grid button:nth-child(3)"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 14:07:17.538","tool":"puppeteer_click"}
{"arguments":{"height":800,"name":"network-status-final","width":1200},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-21 14:07:29.430","tool":"puppeteer_screenshot"}
