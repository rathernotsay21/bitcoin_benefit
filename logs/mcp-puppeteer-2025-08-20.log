{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 04:51:39.244"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 04:51:39.245"}
{"arguments":{},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 05:02:09.277","tool":"puppeteer_connect_active_tab"}
{"0":"n","1":"p","2":"x","level":"info","message":"Launching browser with config:","service":"mcp-puppeteer","timestamp":"2025-08-20 05:02:09.278"}
{"level":"info","message":"Browser launched successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 05:02:11.578"}
{"arguments":{},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 05:02:34.325","tool":"puppeteer_connect_active_tab"}
{"level":"info","message":"Connecting to existing browser","service":"mcp-puppeteer","timestamp":"2025-08-20 05:02:34.333","wsEndpoint":"ws://localhost:9222/devtools/browser/edcefd67-58e2-4695-beee-dce79447ad5d"}
{"level":"debug","message":"Establishing connection to browser","service":"mcp-puppeteer","timestamp":"2025-08-20 05:02:34.333"}
{"level":"info","message":"Successfully connected to browser","service":"mcp-puppeteer","timestamp":"2025-08-20 05:02:34.338"}
{"arguments":{"url":"http://localhost:3000"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 05:02:57.776","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-20 05:02:57.777","url":"http://localhost:3000"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-20 05:02:58.833","url":"http://localhost:3000"}
{"arguments":{"name":"bitcoin_benefit_homepage"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 05:03:04.766","tool":"puppeteer_screenshot"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 06:24:09.308"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 06:24:09.309"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 07:12:25.767"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 07:12:25.768"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 07:26:12.201"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 07:26:12.202"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 08:05:56.598"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 08:05:56.598"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 09:08:28.134"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 09:08:28.135"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 10:22:05.850"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 10:22:05.851"}
{"arguments":{"targetUrl":"http://localhost:3003/bitcoin-tools"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:35:45.753","tool":"puppeteer_connect_active_tab"}
{"0":"n","1":"p","2":"x","level":"info","message":"Launching browser with config:","service":"mcp-puppeteer","timestamp":"2025-08-20 11:35:45.754"}
{"level":"info","message":"Browser launched successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 11:35:46.443"}
{"arguments":{},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:37:21.499","tool":"puppeteer_connect_active_tab"}
{"level":"info","message":"Connecting to existing browser","service":"mcp-puppeteer","timestamp":"2025-08-20 11:37:21.507","wsEndpoint":"ws://localhost:9222/devtools/browser/fc87dd7a-c2ef-4dd4-aad7-84107179363e"}
{"level":"debug","message":"Establishing connection to browser","service":"mcp-puppeteer","timestamp":"2025-08-20 11:37:21.507"}
{"level":"info","message":"Successfully connected to browser","service":"mcp-puppeteer","timestamp":"2025-08-20 11:37:21.513"}
{"level":"info","message":"Found active webpage:","service":"mcp-puppeteer","timestamp":"2025-08-20 11:37:21.519","title":"New Tab","url":"chrome://new-tab-page/"}
{"arguments":{"url":"http://localhost:3003/bitcoin-tools"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:37:25.861","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-20 11:37:25.861","url":"http://localhost:3003/bitcoin-tools"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-20 11:37:26.869","url":"http://localhost:3003/bitcoin-tools"}
{"arguments":{"height":900,"name":"bitcoin-tools-page-after-fixes","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:37:34.428","tool":"puppeteer_screenshot"}
{"arguments":{"selector":".text-center:has-text(\"Network Status\")"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:37:49.494","tool":"puppeteer_click"}
{"arguments":{"script":"// Click on Network Status\nconst elements = Array.from(document.querySelectorAll('*'));\nconst networkStatusElement = elements.find(el => el.textContent.includes('Network Status'));\nif (networkStatusElement) {\n  // Find the clickable parent\n  let clickable = networkStatusElement;\n  while (clickable && clickable.tagName !== 'A' && clickable.tagName !== 'BUTTON' && !clickable.onclick) {\n    clickable = clickable.parentElement;\n  }\n  if (clickable) {\n    clickable.click();\n    'Clicked Network Status';\n  } else {\n    'Could not find clickable element';\n  }\n} else {\n  'Network Status element not found';\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:38:35.984","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":607,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:38:35.984"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:38:35.986"}
{"arguments":{"script":"// Click on the Network Status tool icon\nconst networkStatusCard = document.querySelector('[href*=\"network-status\"], [data-tool*=\"network\"], div:has(> * > :text(\"Network Status\"))');\nif (networkStatusCard) {\n  networkStatusCard.click();\n  'Clicked Network Status card';\n} else {\n  // Try to find by the icon or text\n  const cards = document.querySelectorAll('div[class*=\"card\"], a[class*=\"card\"], button');\n  let found = false;\n  for (const card of cards) {\n    if (card.textContent.includes('Network Status')) {\n      card.click();\n      found = true;\n      break;\n    }\n  }\n  found ? 'Found and clicked Network Status' : 'Network Status card not found';\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:38:46.822","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":657,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:38:46.822"}
{"hasResult":true,"level":"debug","logCount":1,"message":"Script execution result","resultType":"object","service":"mcp-puppeteer","timestamp":"2025-08-20 11:38:46.824"}
{"arguments":{"script":"// Find and click Network Status by searching through all elements\nconst elements = document.querySelectorAll('*');\nlet clicked = false;\nfor (const el of elements) {\n  if (el.textContent === 'Network Status' || (el.textContent && el.textContent.trim() === 'Network Status')) {\n    // Try to click the parent container\n    const parent = el.closest('a, button, div[onclick], div[role=\"button\"]');\n    if (parent) {\n      parent.click();\n      clicked = true;\n      break;\n    }\n    // Or click the element itself\n    el.click();\n    clicked = true;\n    break;\n  }\n}\nclicked ? 'Clicked Network Status' : 'Could not find Network Status';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:38:55.225","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":634,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:38:55.225"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:38:55.228"}
{"arguments":{"height":900,"name":"network-status-current-state","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:39:01.816","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Scroll down to see more content\nwindow.scrollBy(0, 500);\n'Scrolled down';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:39:18.198","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":76,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:39:18.198"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:39:18.199"}
{"arguments":{"height":900,"name":"after-scroll-network-status","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:39:26.770","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Scroll back up to see the tool cards\nwindow.scrollTo(0, 0);\n// Wait a moment then find and click Network Status\nsetTimeout(() => {\n  const cards = document.querySelectorAll('div');\n  for (const card of cards) {\n    if (card.textContent.includes('Network Status') && !card.textContent.includes('Understanding')) {\n      card.style.border = '3px solid red'; // Highlight it\n      card.click();\n      console.log('Clicked Network Status card');\n      break;\n    }\n  }\n}, 100);\n'Scrolled to top and attempting to click Network Status';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:39:36.099","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":534,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:39:36.099"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:39:36.100"}
{"arguments":{"url":"http://localhost:3003/bitcoin-tools/network-status"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:39:52.261","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-20 11:39:52.262","url":"http://localhost:3003/bitcoin-tools/network-status"}
{"error":"HTTP error: 404 Not Found","level":"error","message":"Navigation failed","service":"mcp-puppeteer","timestamp":"2025-08-20 11:39:56.238","url":"http://localhost:3003/bitcoin-tools/network-status"}
{"arguments":{"script":"// Check console for errors\nconst errors = [];\nconst originalError = console.error;\nconsole.error = function(...args) {\n  errors.push(args.join(' '));\n  originalError.apply(console, args);\n};\n\n// Wait a moment for any errors to be captured\nsetTimeout(() => {\n  console.log('Captured errors:', errors);\n}, 1000);\n\n// Check for fetch failures\nconst originalFetch = window.fetch;\nwindow.fetch = function(...args) {\n  console.log('Fetching:', args[0]);\n  return originalFetch.apply(this, args).then(response => {\n    if (!response.ok) {\n      console.error(`Fetch failed: ${args[0]} - Status: ${response.status}`);\n    }\n    return response;\n  });\n};\n\n'Error monitoring enabled';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:40:19.643","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":675,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:40:19.643"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:40:19.644"}
{"arguments":{"script":"// Find and click the Network Status tab\nconst tabs = document.querySelectorAll('button[role=\"tab\"], [data-state], button');\nlet found = false;\nfor (const tab of tabs) {\n  if (tab.textContent && tab.textContent.includes('Network')) {\n    tab.click();\n    found = true;\n    console.log('Clicked Network Status tab');\n    break;\n  }\n}\nif (!found) {\n  // Try finding by looking for the chart bar icon\n  const icons = document.querySelectorAll('svg');\n  for (const icon of icons) {\n    const parent = icon.closest('button');\n    if (parent && parent.textContent && parent.textContent.includes('Network')) {\n      parent.click();\n      console.log('Clicked Network Status via icon');\n      found = true;\n      break;\n    }\n  }\n}\nfound ? 'Network Status tab clicked' : 'Could not find Network Status tab';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:40:36.094","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":799,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:40:36.094"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:40:36.095"}
{"arguments":{"height":900,"name":"network-status-final-check","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:40:46.536","tool":"puppeteer_screenshot"}
{"arguments":{"url":"http://localhost:3003/bitcoin-tools"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:40:52.984","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-20 11:40:52.984","url":"http://localhost:3003/bitcoin-tools"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-20 11:40:53.922","url":"http://localhost:3003/bitcoin-tools"}
{"arguments":{"height":900,"name":"bitcoin-tools-current-state","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:41:06.502","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Find and click Network Status tab/card\nconst cards = document.querySelectorAll('div');\nfor (const card of cards) {\n  const text = card.textContent || '';\n  if (text.includes('Network Status') && !text.includes('Understanding')) {\n    // Check if it's the card with the icon\n    const hasIcon = card.querySelector('svg') || card.querySelector('[class*=\"icon\"]');\n    if (hasIcon || card.closest('[class*=\"card\"]')) {\n      console.log('Found Network Status card, clicking...');\n      card.click();\n      return 'Clicked Network Status';\n    }\n  }\n}\nreturn 'Network Status not found';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:41:20.621","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":585,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:41:20.621"}
{"hasResult":true,"level":"debug","logCount":1,"message":"Script execution result","resultType":"string","service":"mcp-puppeteer","timestamp":"2025-08-20 11:41:20.622"}
{"arguments":{"height":900,"name":"network-status-after-click","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:41:28.928","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Scroll down to see if Network Status content loaded\nwindow.scrollBy(0, 600);\n// Check if there's any network status content visible\nconst hasNetworkContent = document.body.textContent.includes('Block Height') || \n                          document.body.textContent.includes('Difficulty') ||\n                          document.body.textContent.includes('Hashrate') ||\n                          document.body.textContent.includes('Real-time Bitcoin network information');\n                          \nhasNetworkContent ? 'Network Status content found' : 'Network Status content not found';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:41:39.081","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":588,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:41:39.081"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:41:39.082"}
{"arguments":{"height":900,"name":"network-status-scrolled-view","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:41:46.754","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Scroll back up first\nwindow.scrollTo(0, 0);\n\n// Wait a bit then find the Network Status tab\nsetTimeout(() => {\n  // Look for the Network Status text in the tab bar\n  const elements = Array.from(document.querySelectorAll('*'));\n  for (const el of elements) {\n    if (el.textContent === 'Network Status' || \n        (el.textContent && el.textContent.trim() === 'Network Status')) {\n      console.log('Found element with text:', el.tagName, el.className);\n      el.click();\n      \n      // Also try clicking parent if it exists\n      if (el.parentElement) {\n        el.parentElement.click();\n      }\n    }\n  }\n}, 500);\n\n'Attempting to click Network Status tab';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:42:02.038","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":661,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:42:02.038"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:42:02.039"}
{"arguments":{"script":"// Check for any errors in the console\nconst errors = [];\n\n// Override console.error to capture errors\nconst originalError = console.error;\nconsole.error = function(...args) {\n  errors.push(args.join(' '));\n  originalError.apply(console, args);\n};\n\n// Try to manually trigger the Network Status tab\nconst tabs = document.querySelectorAll('[role=\"tab\"], button');\nfor (const tab of tabs) {\n  if (tab.textContent && tab.textContent.includes('Network')) {\n    console.log('Found Network tab, clicking it');\n    tab.click();\n    break;\n  }\n}\n\n// Wait for any errors\nsetTimeout(() => {\n  console.log('Captured errors:', errors);\n}, 1000);\n\n// Check if Network Status component exists in DOM\nconst hasNetworkComponent = !!document.querySelector('[class*=\"NetworkStatus\"], [data-testid*=\"network\"]');\nconsole.log('Network Status component in DOM:', hasNetworkComponent);\n\n'Checking for errors and Network Status component';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:42:25.664","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":916,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:42:25.664"}
{"hasResult":false,"level":"debug","logCount":2,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:42:25.665"}
{"arguments":{"script":"// Get all console messages\nconst logs = [];\nconst errors = [];\n\n// Check for any existing errors in the page\nif (window.__errors) {\n  errors.push(...window.__errors);\n}\n\n// Try to get the active tab content\nconst activeTab = document.querySelector('[role=\"tabpanel\"][data-state=\"active\"], [role=\"tabpanel\"]:not([hidden])');\nconsole.log('Active tab content:', activeTab ? activeTab.innerHTML.substring(0, 200) : 'No active tab');\n\n// Check what tabs are available\nconst allTabs = Array.from(document.querySelectorAll('[role=\"tab\"]')).map(t => t.textContent);\nconsole.log('Available tabs:', allTabs);\n\n// Check for React error boundaries\nconst errorBoundaries = document.querySelectorAll('[class*=\"error\"], [class*=\"Error\"]');\nconsole.log('Error boundaries found:', errorBoundaries.length);\n\n// Return diagnostic info\nJSON.stringify({\n  hasActiveTab: !!activeTab,\n  availableTabs: allTabs,\n  errorBoundaries: errorBoundaries.length,\n  activeTabContent: activeTab ? activeTab.textContent.substring(0, 100) : null\n});"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:42:38.766","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":1014,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:42:38.766"}
{"hasResult":false,"level":"debug","logCount":3,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:42:38.768"}
{"arguments":{"url":"http://localhost:3003/bitcoin-tools"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:47:42.488","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-20 11:47:42.488","url":"http://localhost:3003/bitcoin-tools"}
{"error":"Navigation timeout of 30000 ms exceeded","level":"error","message":"Navigation failed","service":"mcp-puppeteer","timestamp":"2025-08-20 11:48:12.488","url":"http://localhost:3003/bitcoin-tools"}
{"arguments":{},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:48:59.683","tool":"puppeteer_connect_active_tab"}
{"level":"info","message":"Connecting to existing browser","service":"mcp-puppeteer","timestamp":"2025-08-20 11:48:59.686","wsEndpoint":"ws://localhost:9222/devtools/browser/bb04f22b-c76d-4346-b138-f3ef03d7a3ee"}
{"level":"debug","message":"Closing existing browser connection","service":"mcp-puppeteer","timestamp":"2025-08-20 11:48:59.686"}
{"level":"debug","message":"Establishing connection to browser","service":"mcp-puppeteer","timestamp":"2025-08-20 11:48:59.686"}
{"level":"info","message":"Successfully connected to browser","service":"mcp-puppeteer","timestamp":"2025-08-20 11:48:59.690"}
{"level":"info","message":"Found active webpage:","service":"mcp-puppeteer","timestamp":"2025-08-20 11:48:59.695","title":"New Tab","url":"chrome://new-tab-page/"}
{"arguments":{"url":"http://localhost:3003/bitcoin-tools"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:10.685","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:10.685","url":"http://localhost:3003/bitcoin-tools"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-20 11:49:12.068","url":"http://localhost:3003/bitcoin-tools"}
{"arguments":{"height":900,"name":"bitcoin-tools-fixed","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:21.339","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Find and click the Network Status tab\nconst tabs = document.querySelectorAll('[role=\"tab\"], button, div');\nlet found = false;\nfor (const tab of tabs) {\n  if (tab.textContent && tab.textContent.trim() === 'Network Status') {\n    console.log('Found Network Status tab, clicking...');\n    tab.click();\n    found = true;\n    break;\n  }\n}\nfound ? 'Clicked Network Status tab' : 'Network Status tab not found';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:31.758","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":407,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:31.758"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:31.759"}
{"arguments":{"script":"// Click on the Network Status card\nconst cards = Array.from(document.querySelectorAll('div, button'));\nfor (const card of cards) {\n  if (card.textContent && card.textContent.includes('Network Status') && \n      !card.textContent.includes('Transaction') && \n      !card.textContent.includes('Understanding')) {\n    // Check if it has the chart/status icon\n    const hasIcon = card.querySelector('svg') || card.querySelector('[class*=\"icon\"]');\n    if (hasIcon || card.className.includes('card') || card.parentElement?.className.includes('card')) {\n      console.log('Found Network Status card');\n      card.click();\n      return 'Clicked Network Status card';\n    }\n  }\n}\nreturn 'Network Status card not found';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:41.002","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":711,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:41.002"}
{"hasResult":true,"level":"debug","logCount":1,"message":"Script execution result","resultType":"string","service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:41.003"}
{"arguments":{"height":900,"name":"network-status-working","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:48.376","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Scroll down to see Network Status content\nwindow.scrollBy(0, 500);\n// Check if Network Status content is visible\nconst hasNetworkContent = document.body.textContent.includes('Current Network Health') || \n                          document.body.textContent.includes('Waiting to Process') ||\n                          document.body.textContent.includes('Queue Size') ||\n                          document.body.textContent.includes('Typical Cost');\nhasNetworkContent ? 'Network Status content is loaded' : 'Network Status content not found';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:57.936","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":541,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:57.936"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:49:57.937"}
{"arguments":{"height":900,"name":"network-status-scrolled","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:50:04.658","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Scroll back to top and click Network Status directly\nwindow.scrollTo(0, 0);\n\n// Wait a moment then click Network Status\nsetTimeout(() => {\n  // Find the Network Status element in the tab bar\n  const elements = document.querySelectorAll('*');\n  for (const el of elements) {\n    if (el.textContent === 'Network Status' && el !== document.body) {\n      console.log('Found Network Status element:', el.tagName);\n      el.click();\n      // Also try clicking parent\n      if (el.parentElement) {\n        el.parentElement.click();\n      }\n      break;\n    }\n  }\n}, 500);\n\n'Attempting to click Network Status directly';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:50:15.453","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":614,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:50:15.454"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:50:15.455"}
{"arguments":{"script":"// Click on Fee Calculator to test if it works\nconst feeCalc = Array.from(document.querySelectorAll('*')).find(el => \n  el.textContent === 'Fee Calculator' || \n  (el.textContent && el.textContent.includes('Fee Calculator') && !el.textContent.includes('Understanding'))\n);\nif (feeCalc) {\n  console.log('Found Fee Calculator, clicking...');\n  feeCalc.click();\n  'Clicked Fee Calculator';\n} else {\n  'Fee Calculator not found';\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:50:45.030","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":426,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:50:45.030"}
{"hasResult":false,"level":"debug","logCount":1,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:50:45.031"}
{"arguments":{"height":900,"name":"fee-calculator-test","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:50:51.872","tool":"puppeteer_screenshot"}
{"arguments":{"url":"http://localhost:3003/bitcoin-tools?tool=network"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:50:59.465","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-20 11:50:59.465","url":"http://localhost:3003/bitcoin-tools?tool=network"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-20 11:51:00.798","url":"http://localhost:3003/bitcoin-tools?tool=network"}
{"arguments":{"height":900,"name":"network-status-direct-url","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:51:17.892","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Scroll down to see more of the Network Status content\nwindow.scrollBy(0, 400);\n'Scrolled down';"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:51:26.811","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":98,"service":"mcp-puppeteer","timestamp":"2025-08-20 11:51:26.811"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-20 11:51:26.812"}
{"arguments":{"height":900,"name":"network-status-final-working","width":1400},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 11:51:36.459","tool":"puppeteer_screenshot"}
{"arguments":{"targetUrl":"http://localhost:3001/bitcoin-tools"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 13:58:31.968","tool":"puppeteer_connect_active_tab"}
{"level":"info","message":"Connecting to existing browser","service":"mcp-puppeteer","targetUrl":"http://localhost:3001/bitcoin-tools","timestamp":"2025-08-20 13:58:31.970","wsEndpoint":"ws://localhost:9222/devtools/browser/bb04f22b-c76d-4346-b138-f3ef03d7a3ee"}
{"level":"debug","message":"Establishing connection to browser","service":"mcp-puppeteer","timestamp":"2025-08-20 13:58:31.970"}
{"level":"info","message":"Successfully connected to browser","service":"mcp-puppeteer","timestamp":"2025-08-20 13:58:31.974"}
{"level":"info","message":"Found active webpage:","service":"mcp-puppeteer","timestamp":"2025-08-20 13:58:31.978","title":"New Tab","url":"chrome://new-tab-page/"}
{"arguments":{"url":"http://localhost:3001/bitcoin-tools"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 13:58:36.698","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-20 13:58:36.698","url":"http://localhost:3001/bitcoin-tools"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-20 13:58:40.257","url":"http://localhost:3001/bitcoin-tools"}
{"arguments":{"height":900,"name":"bitcoin-tools-fixed-spacing","width":1440},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-20 13:58:44.801","tool":"puppeteer_screenshot"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 15:29:15.639"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 15:29:15.640"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 15:37:33.883"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 15:37:33.884"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 16:09:35.386"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 16:09:35.387"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 16:10:43.012"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 16:10:43.013"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 18:06:52.934"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 18:06:52.934"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 20:13:09.272"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 20:13:09.273"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 20:31:35.757"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 20:31:35.758"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-20 20:38:47.343"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-20 20:38:47.344"}
