{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-23 05:47:33.088"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-23 05:47:33.089"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-23 06:21:14.481"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-23 06:21:14.482"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-23 06:48:29.703"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-23 06:48:29.704"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-23 07:28:37.479"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-23 07:28:37.480"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-23 07:59:13.544"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-23 07:59:13.545"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-23 09:15:23.538"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-23 09:15:23.539"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-23 14:12:19.129"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-23 14:12:19.130"}
{"level":"info","message":"Starting MCP server","service":"mcp-puppeteer","timestamp":"2025-08-23 14:16:46.111"}
{"level":"info","message":"MCP server started successfully","service":"mcp-puppeteer","timestamp":"2025-08-23 14:16:46.112"}
{"arguments":{"debugPort":9222},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:09.351","tool":"puppeteer_connect_active_tab"}
{"0":"n","1":"p","2":"x","level":"info","message":"Launching browser with config:","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:09.352"}
{"level":"info","message":"Browser launched successfully","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:09.971"}
{"level":"info","message":"Connecting to existing browser","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:09.983","wsEndpoint":"ws://localhost:9222/devtools/browser/ce2b94eb-2815-4975-af23-fb15ccba3dc3"}
{"level":"debug","message":"Establishing connection to browser","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:09.983"}
{"level":"info","message":"Successfully connected to browser","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:09.990"}
{"level":"info","message":"Found active webpage:","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:09.996","title":"New Tab","url":"chrome://new-tab-page/"}
{"arguments":{"url":"http://localhost:3002"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:17.130","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:17.130","url":"http://localhost:3002"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-23 14:52:19.781","url":"http://localhost:3002"}
{"arguments":{"script":"// Capture any console errors\nconst errors = [];\nconst originalError = console.error;\nconsole.error = function(...args) {\n  errors.push(args.join(' '));\n  originalError.apply(console, args);\n};\n\n// Wait a moment for any errors to appear\nsetTimeout(() => {\n  console.log('CONSOLE_ERRORS:', JSON.stringify(errors));\n}, 1000);\n\n// Also check for any immediate errors in the page\nconst errorElements = document.querySelectorAll('.error, [class*=\"error\"]');\nconsole.log('ERROR_ELEMENTS:', errorElements.length);\n\n// Return current page title and any visible errors\n{\n  title: document.title,\n  url: window.location.href,\n  hasErrors: errors.length > 0 || errorElements.length > 0,\n  errors: errors,\n  errorElements: Array.from(errorElements).map(el => ({\n    className: el.className,\n    text: el.textContent?.substring(0, 100)\n  }))\n}"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:34.826","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":830,"service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:34.826"}
{"error":"Unexpected token ':'","level":"error","message":"Script evaluation failed","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:34.827"}
{"arguments":{"script":"// Check for console errors\n(() => {\n  const logs = [];\n  // Capture existing console methods\n  const originalLog = console.log;\n  const originalError = console.error;\n  const originalWarn = console.warn;\n  \n  // Override console methods\n  console.log = (...args) => { logs.push({type: 'log', message: args.join(' ')}); originalLog(...args); };\n  console.error = (...args) => { logs.push({type: 'error', message: args.join(' ')}); originalError(...args); };\n  console.warn = (...args) => { logs.push({type: 'warn', message: args.join(' ')}); originalWarn(...args); };\n  \n  // Return page info\n  return {\n    title: document.title,\n    url: window.location.href,\n    bodyText: document.body ? document.body.innerText.substring(0, 500) : 'No body'\n  };\n})();"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:48.782","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":756,"service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:48.782"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:48.783"}
{"arguments":{"script":"document.title + ' | ' + window.location.href"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:54.072","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":45,"service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:54.072"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:54.073"}
{"arguments":{"height":800,"name":"homepage","width":1280},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:52:58.520","tool":"puppeteer_screenshot"}
{"arguments":{"script":"window.onerror = function(msg, url, lineNo, columnNo, error) { return 'Error: ' + msg + ' at ' + url + ':' + lineNo; }; 'error handler set'"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:04.526","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":139,"service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:04.526"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:04.527"}
{"arguments":{"url":"http://localhost:3002/calculator"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:19.271","tool":"puppeteer_navigate"}
{"level":"info","message":"Navigating to URL","service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:19.271","url":"http://localhost:3002/calculator"}
{"level":"info","message":"Navigation successful","service":"mcp-puppeteer","status":200,"timestamp":"2025-08-23 14:53:21.530","url":"http://localhost:3002/calculator"}
{"arguments":{"script":"// Check for any errors\nconst errors = [];\nwindow.addEventListener('error', (e) => {\n  errors.push({\n    message: e.message,\n    filename: e.filename,\n    line: e.lineno,\n    col: e.colno\n  });\n});\n\n// Check console for existing errors\nif (window.console && window.console.error) {\n  const originalError = console.error;\n  console.error = function(...args) {\n    errors.push({type: 'console.error', message: args.join(' ')});\n    originalError.apply(console, args);\n  };\n}\n\n// Wait and return current state\nsetTimeout(() => {\n  console.log('ERRORS_FOUND:', errors.length);\n}, 100);\n\n// Return current page info\nJSON.stringify({\n  title: document.title,\n  url: window.location.href,\n  hasErrors: errors.length > 0,\n  errorCount: errors.length\n})"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:36.196","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":744,"service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:36.196"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:36.197"}
{"arguments":{"height":800,"name":"calculator-page","width":1280},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:41.053","tool":"puppeteer_screenshot"}
{"arguments":{"script":"// Open console and check for errors\nconst logs = [];\n\n// Override console methods to capture output\nconst methods = ['log', 'warn', 'error'];\nmethods.forEach(method => {\n  const original = console[method];\n  console[method] = function(...args) {\n    logs.push({\n      type: method,\n      message: args.map(arg => {\n        if (typeof arg === 'object') {\n          try {\n            return JSON.stringify(arg);\n          } catch (e) {\n            return String(arg);\n          }\n        }\n        return String(arg);\n      }).join(' '),\n      timestamp: new Date().toISOString()\n    });\n    original.apply(console, arguments);\n  };\n});\n\n// Check for React errors\nif (window.React && window.React.version) {\n  logs.push({type: 'info', message: 'React version: ' + window.React.version});\n}\n\n// Check for any error elements in the DOM\nconst errorElements = document.querySelectorAll('[class*=\"error\"], [id*=\"error\"], .error-boundary');\nlogs.push({type: 'info', message: 'Error elements found: ' + errorElements.length});\n\n// Return the logs\nJSON.stringify(logs)"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:54.981","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":1059,"service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:54.982"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-23 14:53:54.983"}
{"arguments":{"script":"// Try to access window error events\nlet errorFound = false;\nlet errorMessage = '';\n\n// Add error listener\nwindow.addEventListener('error', function(e) {\n  errorFound = true;\n  errorMessage = e.message + ' at ' + e.filename + ':' + e.lineno;\n});\n\n// Check if page has loaded properly\nconst pageStatus = {\n  title: document.title,\n  url: window.location.href,\n  readyState: document.readyState,\n  bodyExists: !!document.body,\n  hasContent: document.body ? document.body.children.length > 0 : false,\n  reactRoot: !!document.getElementById('__next'),\n  errorFound: errorFound,\n  errorMessage: errorMessage\n};\n\nJSON.stringify(pageStatus)"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:54:06.653","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":633,"service":"mcp-puppeteer","timestamp":"2025-08-23 14:54:06.654"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-23 14:54:06.655"}
{"arguments":{"script":"document.title"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:54:11.162","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":14,"service":"mcp-puppeteer","timestamp":"2025-08-23 14:54:11.162"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-23 14:54:11.164"}
{"arguments":{"script":"window.scrollTo(0, document.body.scrollHeight)"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:54:15.956","tool":"puppeteer_evaluate"}
{"level":"debug","message":"Executing script in browser","scriptLength":46,"service":"mcp-puppeteer","timestamp":"2025-08-23 14:54:15.956"}
{"hasResult":false,"level":"debug","logCount":0,"message":"Script execution result","resultType":"undefined","service":"mcp-puppeteer","timestamp":"2025-08-23 14:54:15.957"}
{"arguments":{"height":800,"name":"calculator-scrolled","width":1280},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:54:21.204","tool":"puppeteer_screenshot"}
{"arguments":{"selector":"button, .btn-primary, [role=\"button\"]"},"level":"debug","message":"Tool call received","service":"mcp-puppeteer","timestamp":"2025-08-23 14:54:30.673","tool":"puppeteer_click"}
